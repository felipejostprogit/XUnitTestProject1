// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CurrentRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            CurrentRating = 3m,
                            Name = "Lakewood"
                        },
                        new
                        {
                            HotelId = 2,
                            CurrentRating = 4m,
                            Name = "Bridgewood"
                        },
                        new
                        {
                            HotelId = 3,
                            CurrentRating = 5m,
                            Name = "Ridgewood"
                        });
                });

            modelBuilder.Entity("Domain.Entities.HotelPrice", b =>
                {
                    b.Property<int>("HotelPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HotelPriceId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelPrices");

                    b.HasData(
                        new
                        {
                            HotelPriceId = 1,
                            ClientType = "Regular",
                            DateType = "Week",
                            HotelId = 1,
                            Price = 110.00m
                        },
                        new
                        {
                            HotelPriceId = 2,
                            ClientType = "Reward",
                            DateType = "Week",
                            HotelId = 1,
                            Price = 80.00m
                        },
                        new
                        {
                            HotelPriceId = 3,
                            ClientType = "Regular",
                            DateType = "Weekend",
                            HotelId = 1,
                            Price = 90.00m
                        },
                        new
                        {
                            HotelPriceId = 4,
                            ClientType = "Reward",
                            DateType = "Weekend",
                            HotelId = 1,
                            Price = 80.00m
                        },
                        new
                        {
                            HotelPriceId = 5,
                            ClientType = "Regular",
                            DateType = "Week",
                            HotelId = 2,
                            Price = 160.00m
                        },
                        new
                        {
                            HotelPriceId = 6,
                            ClientType = "Reward",
                            DateType = "Week",
                            HotelId = 2,
                            Price = 110.00m
                        },
                        new
                        {
                            HotelPriceId = 7,
                            ClientType = "Regular",
                            DateType = "Weekend",
                            HotelId = 2,
                            Price = 60.00m
                        },
                        new
                        {
                            HotelPriceId = 8,
                            ClientType = "Reward",
                            DateType = "Weekend",
                            HotelId = 2,
                            Price = 50.00m
                        },
                        new
                        {
                            HotelPriceId = 9,
                            ClientType = "Regular",
                            DateType = "Week",
                            HotelId = 3,
                            Price = 220.00m
                        },
                        new
                        {
                            HotelPriceId = 10,
                            ClientType = "Reward",
                            DateType = "Week",
                            HotelId = 3,
                            Price = 100.00m
                        },
                        new
                        {
                            HotelPriceId = 11,
                            ClientType = "Regular",
                            DateType = "Weekend",
                            HotelId = 3,
                            Price = 150.00m
                        },
                        new
                        {
                            HotelPriceId = 12,
                            ClientType = "Reward",
                            DateType = "Weekend",
                            HotelId = 3,
                            Price = 40.00m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("HotelId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Domain.Entities.HotelPrice", b =>
                {
                    b.HasOne("Domain.Entities.Hotel", "Hotel")
                        .WithMany("HotelPrices")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Reservation", b =>
                {
                    b.HasOne("Domain.Entities.Hotel", "Hotel")
                        .WithMany("Reservations")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
